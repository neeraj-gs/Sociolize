import { Inter } from 'next/font/google'
import React, { useCallback } from 'react';
import { SiSocialblade } from "react-icons/si";
import { SiHashicorp } from "react-icons/si";
import { RiHomeOfficeLine } from "react-icons/ri";
import { Button } from '@/components/ui/button';
import { AiOutlineNotification } from "react-icons/ai";
import { TbMessageCircleHeart } from "react-icons/tb";
import { CiSaveDown2 } from "react-icons/ci";
import { PiUserSwitchThin } from "react-icons/pi";
import { PiBroadcastFill } from "react-icons/pi";
import FeedCard from '@/components/FeedCard';
import { CredentialResponse, GoogleLogin } from '@react-oauth/google';
import toast from 'react-hot-toast';
import { graphqlClient } from '@/clients/api';
import { verifyUserGoogleTokenQuery } from '@/graphql/query/user';




interface LeftGridButtons{
  title:string;
  icon:React.ReactNode
}

const LeftMenuItems = [
  {
    title: "Home",
    icon: <RiHomeOfficeLine />
  },
  {
    title: "Explore",
    icon: <SiHashicorp />
  },
  {
    title: "Notifications",
    icon: <AiOutlineNotification /> 
  },
  {
    title: "Messages",
    icon: <TbMessageCircleHeart /> 
  },
  {
    title: "Saved",
    icon: <CiSaveDown2 /> 
  },
  {
    title: "Profile",
    icon: <PiUserSwitchThin /> 
  },
  

]



export default function Home() {

  const handleLoginWithGoolge = useCallback(async(cred:CredentialResponse)=>{
    const googleToken = cred.credential
    if(!googleToken) return toast.error(`Google Verification Failed`)

    const {verifyGoogleToken} = await graphqlClient.request(verifyUserGoogleTokenQuery,{token:googleToken})
    toast.success(`Verified Successfully`)
    // console.log(verifyGoogleToken)

    if(verifyGoogleToken) window.localStorage.setItem("__sociolize_token",verifyGoogleToken)
    //have verified the and got the token , from now we need to sent the token as a header everytime we perform some operations on the cleint side
  },[])

  return (
    <main>
      <div className='grid grid-cols-12 h-screen w-screen px-56'>

        {/* Left Grid */}
        <div className='col-span-3  pt-8 px-4 ml-20' >
          <div className='text-6xl w-fit  hover:bg-gray-200 rounded-full p-2 h-fit cursor-pointer transition-all'>
            <SiSocialblade  />
          </div>
          <div className='mt-6 text-xl pr-4'>
            <ul>
            {LeftMenuItems.map((i)=>{
              return(
                <li className=' w-fit flex justify-start items-center gap-4 hover:bg-gray-200 rounded-full px-3 py-3 cursor-pointer mt-4' key={i.title}><span>{i.icon}</span> <span>{i.title}</span></li>
              )
            })}
            </ul>
            <div className='mt-6 pr-2'>
              <Button className='bg-black p-4 rounded-full w-full mx-4 text-white text-lg hover:text-black' variant='ghost'><span className='mr-2'>P2P</span> <PiBroadcastFill /> </Button>
            </div>
          </div>
        </div>

        {/* CenterGrid  */}
        <div className='col-span-5 border-r-2 border-l-2 border-slate-200'>
          <FeedCard />
        </div>





        <div className='col-span-4 p-5'>
          <div className='p-5 bg-slate-50 rounded-xl'>
            <h1 className='text-2xl my-2'>New to Twitter?</h1>
            <GoogleLogin onSuccess={handleLoginWithGoolge} />
          </div>
          {/* credential is a token generated by google it si a short lived token and expires after some time , token has information related to our credentials, we need to send this toke to the server 
          our server will talk to google and ask for informarion related to the suer if token is valid we will check if user with same emial exissts if not crete a user ands create a token 
          if exists we will create a token  */}
        </div>
      </div>
    </main>
  )
}
